from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateResponseForRawNoteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prompt=None):  # noqa: E501
        """GenerateResponseForRawNoteRequest - a model defined in OpenAPI

        :param prompt: The prompt of this GenerateResponseForRawNoteRequest.  # noqa: E501
        :type prompt: str
        """
        self.openapi_types = {
            'prompt': str
        }

        self.attribute_map = {
            'prompt': 'prompt'
        }

        self._prompt = prompt

    @classmethod
    def from_dict(cls, dikt) -> 'GenerateResponseForRawNoteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The generateResponseForRawNote_request of this GenerateResponseForRawNoteRequest.  # noqa: E501
        :rtype: GenerateResponseForRawNoteRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prompt(self) -> str:
        """Gets the prompt of this GenerateResponseForRawNoteRequest.


        :return: The prompt of this GenerateResponseForRawNoteRequest.
        :rtype: str
        """
        return self._prompt

    @prompt.setter
    def prompt(self, prompt: str):
        """Sets the prompt of this GenerateResponseForRawNoteRequest.


        :param prompt: The prompt of this GenerateResponseForRawNoteRequest.
        :type prompt: str
        """
        allowed_values = ["summarize", "listAsBulletsPoints"]  # noqa: E501
        if prompt not in allowed_values:
            raise ValueError(
                "Invalid value for `prompt` ({0}), must be one of {1}"
                .format(prompt, allowed_values)
            )

        self._prompt = prompt
